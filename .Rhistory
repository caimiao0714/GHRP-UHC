select(`Country Name`, `Country Code`, `Country WHO Region`, `Country Income Group`,
`Indicator Code`, Year, Value) %>%
spread(`Indicator Code`, Value) %>%
select(c(1:ncol(.))[colSums(is.na(.)) < 500])
var_sel = names(d1)
codebook1 = codebook[codebook$`Indicator Code` %in% names(d1),]
#data.table::fwrite(codebook1, 'Data/codebook1.csv')
# Population, downloaded at:
# https://databank.worldbank.org/data/reports.aspx?source=2&series=SP.POP.TOTL&country=#
pop = data.table::fread('Data/Data_Extract_From_World_Development_Indicators_Population/7f9c04b7-9a7d-435b-878b-6c907d23db48_Data.csv')
pop = pop %>%
select(-`Series Name`, -`Series Code`, -`2017 [YR2017]`, -`2018 [YR2018]`) %>%
tidyr::gather(key = 'Year', value = 'Population', -`Country Name`, -`Country Code`) %>%
select(-`Country Name`) %>%
mutate(Year = as.integer(substr(Year, 1, 4)),
Population = as.numeric(Population))
# GDP, downloaded at:
# https://databank.worldbank.org/data/reports.aspx?source=2&series=NY.GDP.MKTP.KD&country=#
GDP = data.table::fread('Data/Data_Extract_From_World_Development_Indicators_GDP/28edd75e-f579-4950-86eb-7846b8864683_Data.csv')
GDP = GDP %>%
select(-`Series Name`, -`Series Code`, -`2017 [YR2017]`, -`2018 [YR2018]`) %>%
tidyr::gather(key = 'Year', value = 'GDP', -`Country Name`, -`Country Code`) %>%
select(-`Country Name`) %>%
mutate(Year = as.integer(substr(Year, 1, 4)),
GDP = as.numeric(GDP))
# Life expectancy
# https://databank.worldbank.org/data/reports.aspx?source=2&series=SP.DYN.LE00.IN&country=
LE = data.table::fread('Data/Data_Extract_From_World_Development_Indicators_Life_expectancy/48b94b19-e0de-469c-a449-f4846b7033b0_Data.csv')
LE = LE %>%
select(-`Series Name`, -`Series Code`, -`2017 [YR2017]`, -`2018 [YR2018]`) %>%
tidyr::gather(key = 'Year', value = 'Life expectancy',
-`Country Name`, -`Country Code`) %>%
select(-`Country Name`) %>%
mutate(Year = as.integer(substr(Year, 1, 4)),
`Life expectancy` = as.numeric(`Life expectancy`))
# Merge databases
d2 = d1 %>%
left_join(pop, by = c("Country Code" = 'Country Code', 'Year' = 'Year')) %>%
left_join(GDP, by = c("Country Code" = 'Country Code', 'Year' = 'Year')) %>%
left_join(LE, by = c("Country Code" = 'Country Code', 'Year' = 'Year'))
names(d2) = names(d2) %>%
gsub("%", "", .) %>%
gsub("\\$", "", .) %>%
gsub(" ", "", .) %>%
gsub("-", "_", .) %>%
gsub("\\.", "", .)
f1 = d2 %>%
select(CountryName, Lifeexpectancy, CHEGDP_SHA2011, GGHE_DGDP_SHA2011, PVT_DCHE_SHA2011,
CFACHE_SHA2011, CHICHE_SHA2011, OOPSCHE_SHA2011, Population, GDP, Year, CountryIncomeGroup) %>%
mutate(Population = Population/1000000,
GDP = GDP/10000000000) %>%
na.omit() %>%
data.table::data.table()
data.table::fwrite(f1, 'Data/f1.csv')
pacman::p_load(tidyverse)
f1 = readr::read_csv('Data/f1.csv')
# adjusting legend alpha:
# https://stackoverflow.com/questions/40944239/removing-ggplot2-legend-removes-whole-data-from-the-plot
windowsFonts(Times=windowsFont("Times New Roman"))
f0 %>%
filter(!is.na(`Country Income Group`)) %>%
mutate(`Country Income Group` = ifelse(`Country Income Group` == 'Hi',
'High', `Country Income Group`)) %>%
mutate(`Country Income Group` = factor(`Country Income Group`,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = `Life expectancy`,
group = `Country Code`, color = `Country Income Group`)) +
geom_line(alpha = 0.5, size = 0.1) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)+
theme(legend.justification = c(1, 1), legend.position = c(0.95, 0.1),
legend.background = element_rect(fill=alpha('white', 0.8)),
legend.direction="horizontal", text=element_text(family="Times"))+
guides(color=guide_legend(title="Income group",
override.aes = list(alpha = 1, size = 2)))
# Country Income Group, Country WHO Region
ggsave('Figures/fig1.pdf', width = 10, height = 6.18)
f1 %>%
filter(!is.na(`Country Income Group`)) %>%
mutate(`Country Income Group` = ifelse(`Country Income Group` == 'Hi',
'High', `Country Income Group`)) %>%
mutate(`Country Income Group` = factor(`Country Income Group`,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = `Life expectancy`,
group = `Country Code`, color = `Country Income Group`)) +
geom_line(alpha = 0.5, size = 0.1)
f1 %>%
filter(!is.na(CountryIncomeGroup)) %>%
mutate(CountryIncomeGroup = ifelse(CountryIncomeGroup == 'Hi',
'High', CountryIncomeGroup)) %>%
mutate(CountryIncomeGroup = factor(CountryIncomeGroup,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = `Life expectancy`,
group = `Country Code`, color = CountryIncomeGroup)) +
geom_line(alpha = 0.5, size = 0.1)
f1 %>%
filter(!is.na(CountryIncomeGroup)) %>%
mutate(CountryIncomeGroup = ifelse(CountryIncomeGroup == 'Hi',
'High', CountryIncomeGroup)) %>%
mutate(CountryIncomeGroup = factor(CountryIncomeGroup,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = Lifeexpectancy,
group = `Country Code`, color = CountryIncomeGroup)) +
geom_line(alpha = 0.5, size = 0.1) +
theme_bw() + ylab('Life expectancy in each country')
f1 %>%
filter(!is.na(CountryIncomeGroup)) %>%
mutate(CountryIncomeGroup = ifelse(CountryIncomeGroup == 'Hi',
'High', CountryIncomeGroup)) %>%
mutate(CountryIncomeGroup = factor(CountryIncomeGroup,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = Lifeexpectancy,
group = CountryCode, color = CountryIncomeGroup)) +
geom_line(alpha = 0.5, size = 0.1) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)
f1 %>%
filter(!is.na(CountryIncomeGroup)) %>%
mutate(CountryIncomeGroup = ifelse(CountryIncomeGroup == 'Hi',
'High', CountryIncomeGroup)) %>%
mutate(CountryIncomeGroup = factor(CountryIncomeGroup,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = Lifeexpectancy,
group = CountryName, color = CountryIncomeGroup)) +
geom_line(alpha = 0.5, size = 0.1) +
theme_bw() + ylab('Life expectancy in each country')
f1 %>%
filter(!is.na(CountryIncomeGroup)) %>%
mutate(CountryIncomeGroup = ifelse(CountryIncomeGroup == 'Hi',
'High', CountryIncomeGroup)) %>%
mutate(CountryIncomeGroup = factor(CountryIncomeGroup,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = Lifeexpectancy,
group = CountryName, color = CountryIncomeGroup)) +
geom_line(alpha = 0.5, size = 0.1) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)+
theme(legend.justification = c(1, 1), legend.position = c(0.95, 0.1),
legend.background = element_rect(fill=alpha('white', 0.8)),
legend.direction="horizontal", text=element_text(family="Times"))+
guides(color=guide_legend(title="Income group",
override.aes = list(alpha = 1, size = 2)))
pacman::p_load(tidyverse)
f1 = readr::read_csv('Data/f1.csv')
# adjusting legend alpha:
# https://stackoverflow.com/questions/40944239/removing-ggplot2-legend-removes-whole-data-from-the-plot
windowsFonts(Times=windowsFont("Times New Roman"))
f1 %>%
filter(!is.na(CountryIncomeGroup)) %>%
mutate(CountryIncomeGroup = ifelse(CountryIncomeGroup == 'Hi',
'High', CountryIncomeGroup)) %>%
mutate(CountryIncomeGroup = factor(CountryIncomeGroup,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = Lifeexpectancy,
group = CountryName, color = CountryIncomeGroup)) +
geom_line(alpha = 0.5, size = 0.1) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)+
theme(legend.justification = c(1, 1), legend.position = c(0.95, 0.1),
legend.background = element_rect(fill=alpha('white', 0.8)),
legend.direction="horizontal", text=element_text(family="Times"))+
guides(color=guide_legend(title="Income group",
override.aes = list(alpha = 1, size = 2)))
# Country Income Group, Country WHO Region
ggsave('Figures/fig1.pdf', width = 10, height = 6.18)
f1 = data.table::fread('Data/f1.csv')
names(f1)
vars <- c("Lifeexpectancy", "CHEGDP_SHA2011", "GGHE_DGDP_SHA2011", "PVT_DCHE_SHA2011",
"CFACHE_SHA2011",  "CHICHE_SHA2011", "OOPSCHE_SHA2011", "Population", "GDP" )
tab1 <- print(CreateContTable(vars, strata = "Country Income Group" , data = f1), printToggle = FALSE) %>% as.data.frame() %>% select(c(2:4, 1))
require(tableone)
require(tidyverse)
tab1 <- print(CreateContTable(vars, strata = "Country Income Group" , data = f1), printToggle = FALSE) %>% as.data.frame() %>% select(c(2:4, 1))
rownames(tab1) <- c(
'N',
'Life Expectancies',
'Current health expenditure as percent of GDP',
'Government Health Expenditure as percent of GDP',
'Private health expenditure as percent CHE',
'Out-of-pocket payment as percent of CHE',
'Compulsory financing arrangements as percent of CHE',
'Compulsory health insurance as percent of CHE',
'Population (millions)',
'GDP'
)
colnames(tab1) <- c("Low", "Low-Mid", "Up-Mid", "High")
vars <- c("Lifeexpectancy", "CHEGDP_SHA2011", "GGHE_DGDP_SHA2011", "PVT_DCHE_SHA2011",
"CFACHE_SHA2011",  "CHICHE_SHA2011", "OOPSCHE_SHA2011", "Population", "GDP" )
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup" , data = f1), printToggle = FALSE) %>% as.data.frame() %>% select(c(2:4, 1))
rownames(tab1) <- c(
'N',
'Life Expectancies',
'Current health expenditure as percent of GDP',
'Government Health Expenditure as percent of GDP',
'Private health expenditure as percent CHE',
'Out-of-pocket payment as percent of CHE',
'Compulsory financing arrangements as percent of CHE',
'Compulsory health insurance as percent of CHE',
'Population (millions)',
'GDP'
)
colnames(tab1) <- c("Low", "Low-Mid", "Up-Mid", "High")
tab1
f1 = data.table::fread('Data/f1.csv')
require(tableone)
require(tidyverse)
vars <- c("Lifeexpectancy", "CHEGDP_SHA2011", "GGHE_DGDP_SHA2011", "PVT_DCHE_SHA2011",
"OOPSCHE_SHA2011", "CFACHE_SHA2011",  "CHICHE_SHA2011", "OOPSCHE_SHA2011",
"Population", "GDP" )
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup" , data = f1)
, printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
rownames(tab1) <- c(
'N',
'Life Expectancies',
'Current health expenditure as percent of GDP',
'Government Health Expenditure as percent of GDP',
'Private health expenditure as percent CHE',
'Out-of-pocket payment as percent of CHE',
'Compulsory financing arrangements as percent of CHE',
'Compulsory health insurance as percent of CHE',
'Population (millions)',
'GDP'
)
colnames(tab1) <- c("Low", "Low-Mid", "Up-Mid", "High")
print(CreateContTable(vars, strata = "CountryIncomeGroup" , data = f1)
, printToggle = FALSE) %>%
as.data.frame()
f1 %>%
mutate(CountryIncomeGroup = factor(CountryIncomeGroup, levels = c("Low", "Low-Mid", "Up-Mid", "Hi"))) %>%
print(CreateContTable(vars, strata = "CountryIncomeGroup", data = .)
, printToggle = FALSE) %>%
as.data.frame()
f1 %>%
mutate(CountryIncomeGroup = factor(CountryIncomeGroup, levels = c("Low", "Low-Mid", "Up-Mid", "Hi")))
f1 %>%
mutate(CountryIncomeGroup = factor(CountryIncomeGroup, levels = c("Low", "Low-Mid", "Up-Mid", "Hi"))) %>%
print(CreateContTable(vars, strata = "CountryIncomeGroup", data = .)
, printToggle = FALSE)
print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1)
, printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
f1 = data.table::fread('Data/f1.csv')
require(tableone)
require(tidyverse)
vars <- c("Lifeexpectancy", "CHEGDP_SHA2011", "GGHE_DGDP_SHA2011", "PVT_DCHE_SHA2011",
"OOPSCHE_SHA2011", "CFACHE_SHA2011",  "CHICHE_SHA2011", "Population", "GDP" )
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1)
, printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
rownames(tab1) <- c(
'N',
'Life Expectancy',
'Current health expenditure as percent of GDP',
'Government Health Expenditure as percent of GDP',
'Private health expenditure as percent CHE',
'Out-of-pocket payment as percent of CHE',
'Compulsory financing arrangements as percent of CHE',
'Compulsory health insurance as percent of CHE',
'Population (millions)',
'GDP'
)
colnames(tab1) <- c("Low", "Low-Mid", "Up-Mid", "High")
fit01 = lm(
Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +  PVT_DCHE_SHA2011 +
OOPSCHE_SHA2011 + CFACHE_SHA2011 + CHICHE_SHA2011 +
Population + GDP + Year + CountryIncomeGroup,
data = f1)
fit_hi = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +
PVT_DCHE_SHA2011 +  OOPSCHE_SHA2011 + CFACHE_SHA2011 +
CHICHE_SHA2011 +  Population + GDP + Year,
data = f1[f1$`Country Income Group` == 'Hi',])
fit_upmid = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +
PVT_DCHE_SHA2011 +  OOPSCHE_SHA2011 + CFACHE_SHA2011 +
CHICHE_SHA2011 +  Population + GDP + Year,
data = f1[f1$`Country Income Group` == 'Up-Mid',])
fit_lowmid = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +
PVT_DCHE_SHA2011 +  OOPSCHE_SHA2011 + CFACHE_SHA2011 +
CHICHE_SHA2011 +  Population + GDP + Year,
data = f1[f1$`Country Income Group` == 'Low-Mid',])
fit_low = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +
PVT_DCHE_SHA2011 +  OOPSCHE_SHA2011 + CFACHE_SHA2011 +
CHICHE_SHA2011 +  Population + GDP + Year,
data = f1[f1$`Country Income Group` == 'Low',])
summary(fit01)
fit01 = lm(
Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +  PVT_DCHE_SHA2011 +
OOPSCHE_SHA2011 + CFACHE_SHA2011 + CHICHE_SHA2011 +
Population + GDP + Year,
data = f1)
summary(fit01)
fit_hi = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +
PVT_DCHE_SHA2011 +  OOPSCHE_SHA2011 + CFACHE_SHA2011 +
CHICHE_SHA2011 +  Population + GDP + Year,
data = f1[f1$CountryIncomeGroup == 'Hi',])
pacman::p_load(tidyverse, stargazer)
fit01 = lm(
Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +  PVT_DCHE_SHA2011 +
OOPSCHE_SHA2011 + CFACHE_SHA2011 + CHICHE_SHA2011 +
Population + GDP + Year + CountryIncomeGroup,
data = f1)
fit_hi = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +
PVT_DCHE_SHA2011 +  OOPSCHE_SHA2011 + CFACHE_SHA2011 +
CHICHE_SHA2011 +  Population + GDP + Year,
data = f1[f1$CountryIncomeGroup == 'Hi',])
fit_upmid = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +
PVT_DCHE_SHA2011 +  OOPSCHE_SHA2011 + CFACHE_SHA2011 +
CHICHE_SHA2011 +  Population + GDP + Year,
data = f1[f1$CountryIncomeGroup == 'Up-Mid',])
fit_lowmid = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +
PVT_DCHE_SHA2011 +  OOPSCHE_SHA2011 + CFACHE_SHA2011 +
CHICHE_SHA2011 +  Population + GDP + Year,
data = f1[f1$CountryIncomeGroup == 'Low-Mid',])
fit_low = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +
PVT_DCHE_SHA2011 +  OOPSCHE_SHA2011 + CFACHE_SHA2011 +
CHICHE_SHA2011 +  Population + GDP + Year,
data = f1[f1$CountryIncomeGroup == 'Low',])
stargazer(fit01)
stargazer(tab1, summary = FALSE)
stargazer::stargazer(tab1, summary = FALSE, label = 'descriptive',
title="Characteristics of the countries by income group, 2000 - 2015",
single.row=FALSE, header=FALSE, font.size='small',align = 'l')
tab1
f1 = data.table::fread('Data/f1.csv')
require(tableone)
require(tidyverse)
vars <- c("Lifeexpectancy", "CHEGDP_SHA2011", "GGHE_DGDP_SHA2011", "PVT_DCHE_SHA2011",
"OOPSCHE_SHA2011", "CFACHE_SHA2011",  "CHICHE_SHA2011", "Population", "GDP" )
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1)
, printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
rownames(tab1) <- c(
'N',
'Life Expectancy',
'Current health expenditure as percent of GDP',
'Government Health Expenditure as percent of GDP',
'Private health expenditure as percent CHE',
'Out-of-pocket payment as percent of CHE',
'Compulsory financing arrangements as percent of CHE',
'Compulsory health insurance as percent of CHE',
'Population (millions)',
'GDP'
)
tab1 = data.table::data.table(tab1)
setDT(tab1, keep.rownames = TRUE)[]
names(tab1) <- c("Low", "Low-Mid", "Up-Mid", "High")
f1 = data.table::fread('Data/f1.csv')
require(tableone)
require(tidyverse)
vars <- c("Lifeexpectancy", "CHEGDP_SHA2011", "GGHE_DGDP_SHA2011", "PVT_DCHE_SHA2011",
"OOPSCHE_SHA2011", "CFACHE_SHA2011",  "CHICHE_SHA2011", "Population", "GDP" )
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1)
, printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
rownames(tab1) <- c(
'N',
'Life Expectancy',
'Current health expenditure as percent of GDP',
'Government Health Expenditure as percent of GDP',
'Private health expenditure as percent CHE',
'Out-of-pocket payment as percent of CHE',
'Compulsory financing arrangements as percent of CHE',
'Compulsory health insurance as percent of CHE',
'Population (millions)',
'GDP'
)
tab1 = data.table::data.table(tab1)
data.table::setDT(tab1, keep.rownames = TRUE)[]
names(tab1) <- c("Low", "Low-Mid", "Up-Mid", "High")
tab1 = data.table::setDT(tab1, keep.rownames = TRUE)[]
tab1
f1 = data.table::fread('Data/f1.csv')
require(tableone)
require(tidyverse)
vars <- c("Lifeexpectancy", "CHEGDP_SHA2011", "GGHE_DGDP_SHA2011", "PVT_DCHE_SHA2011",
"OOPSCHE_SHA2011", "CFACHE_SHA2011",  "CHICHE_SHA2011", "Population", "GDP" )
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1)
, printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
tab1 = data.table::data.table(tab1)
rownames(tab1) <- c(
'N',
'Life Expectancy',
'Current health expenditure as percent of GDP',
'Government Health Expenditure as percent of GDP',
'Private health expenditure as percent CHE',
'Out-of-pocket payment as percent of CHE',
'Compulsory financing arrangements as percent of CHE',
'Compulsory health insurance as percent of CHE',
'Population (millions)',
'GDP'
)
tab1 = data.table::setDT(tab1, keep.rownames = TRUE)[]
names(tab1) <- c("Low", "Low-Mid", "Up-Mid", "High")
tab1
View(tab1)
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1)
, printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1)
, printToggle = FALSE) %>%
as.data.frame()
tab1
, printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
add_column(varnames = varnames, before = 1)
varnames <- c(
'N',
'Life Expectancy',
'Current health expenditure as percent of GDP',
'Government Health Expenditure as percent of GDP',
'Private health expenditure as percent CHE',
'Out-of-pocket payment as percent of CHE',
'Compulsory financing arrangements as percent of CHE',
'Compulsory health insurance as percent of CHE',
'Population (millions)',
'GDP'
)
, printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
add_column(varnames = varnames, before = 1)
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
add_column(varnames = varnames, before = 1)
tab1
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
tab1
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column()
tab1
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames)
tab1
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames) %>%
set_colnames(c("Variables", "Low", "Low-Mid", "Up-Mid", "High"))
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames) %>%
setNames(c("Variables", "Low", "Low-Mid", "Up-Mid", "High"))
tab1
print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames)
View(tab1)
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames) %>%
remove_rownames() %>%
setNames(c("Variables", "Low", "Low-Mid", "Up-Mid", "High"))
tab1
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames) %>%
remove_rownames() %>%
setNames(c("Variables", "Low", "Low-Mid", "Up-Mid", "High"))
stargazer::stargazer(tab1, summary = FALSE, label = 'descriptive',
title="Characteristics of the countries by income group, 2000 - 2015",
single.row=FALSE, header=FALSE, font.size='small',align = TRUE)
tab1
print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames)
print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames) %>%
remove_rownames()
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames) %>%
remove_rownames()
row.names(tab1) = NULL
tab1
stargazer(fit_low, fit_lowmid, fit_upmid, fit_hi, label = 'stratifiedOLS',
dep.var.labels=c("Life expectancy"),
title="OLS model predicting life expectancies from 2000 to 2015 stratifeid by country income categories", align=TRUE,
covariate.labels=c(
"Current Health Expenditure as percent of GDP",
"Government Health Expenditure as percent of GDP",
"Private Health Expenditure as percent CHE",
"Out-of-pocket payment as percent of CHE",
"Compulsory Financing Arrangements as percent of CHE",
"Compulsory health insurance as percent of CHE",
"Population (millions)", "GDP","Year", "Constant"),
column.labels=c("Low","Low-mid", "Up-mid", "High"),
omit.stat=c("LL","ser","f"), ci=TRUE, single.row=FALSE,
header=FALSE, font.size='small')
