"PVTD_pc_PPP_SHA2011", "PVTD_pc_US_SHA2011", "sha11FS", "sha11FS1",
"sha11FS11", "sha11FS5", "sha11FS6", "sha11FS61", "sha11HF", "sha11HF1",
"sha11HF11", "sha11HF2", "sha11HF21", "sha11HF3", "VFACHE_SHA2011",
"VHICHE_SHA2011", "Population", "GDP", "Lifeexpectancy")
#f1 = f0[f0$CHICHE_SHA2011 != 0&!is.na(f0$CHICHE_SHA2011),]
f1 = f0 %>%
select(CountryName, Lifeexpectancy, CHEGDP_SHA2011, GGHEDGDP_SHA2011, PVTDCHE_SHA2011,
CFACHE_SHA2011, CHICHE_SHA2011, OOPSCHE_SHA2011, Population, GDP, Year, `Country Income Group`) %>%
mutate(Population = Population/1000000,
GDP = GDP/1000) %>%
na.omit() %>%
data.table::data.table()
View(LE)
pacman::p_load(tidyverse, tidyr)
#d1 = rio::import('Data/AllData.xlsx')
#data.table::fwrite(d1, 'Data/alldat.csv')
d0 = data.table::fread('Data/alldat.csv')
codebook = d0[!duplicated(d0$`Indicator Code`),5:7]
#data.table::fwrite(codebook, 'Data/codebook.csv')
d1 = d0 %>%
select(`Country Name`, `Country Code`, `Country WHO Region`, `Country Income Group`,
`Indicator Code`, Year, Value) %>%
spread(`Indicator Code`, Value) %>%
select(c(1:ncol(.))[colSums(is.na(.)) < 500])
var_sel = names(d1)
codebook1 = codebook[codebook$`Indicator Code` %in% names(d1),]
#data.table::fwrite(codebook1, 'Data/codebook1.csv')
# Population, downloaded at:
# https://databank.worldbank.org/data/reports.aspx?source=2&series=SP.POP.TOTL&country=#
pop = data.table::fread('Data/Data_Extract_From_World_Development_Indicators_Population/7f9c04b7-9a7d-435b-878b-6c907d23db48_Data.csv')
pop = pop %>%
select(-`Series Name`, -`Series Code`, -`2017 [YR2017]`, -`2018 [YR2018]`) %>%
tidyr::gather(key = 'Year', value = 'Population', -`Country Name`, -`Country Code`) %>%
select(-`Country Name`) %>%
mutate(Year = as.integer(substr(Year, 1, 4)),
Population = as.numeric(Population))
# GDP, downloaded at:
# https://databank.worldbank.org/data/reports.aspx?source=2&series=NY.GDP.MKTP.CD&country=
GDP = data.table::fread('Data/Data_Extract_From_World_Development_Indicators_GDP/2797b7f4-70cd-4d80-bc30-902bbc1ba488_Data.csv')
GDP = GDP %>%
select(-`Series Name`, -`Series Code`, -`2017 [YR2017]`, -`2018 [YR2018]`) %>%
tidyr::gather(key = 'Year', value = 'GDP', -`Country Name`, -`Country Code`) %>%
select(-`Country Name`) %>%
mutate(Year = as.integer(substr(Year, 1, 4)),
GDP = as.numeric(GDP))
# Life expectancy
# https://databank.worldbank.org/data/reports.aspx?source=2&series=SP.DYN.LE00.IN&country=
LE = data.table::fread('Data/Data_Extract_From_World_Development_Indicators_Life_expectancy/48b94b19-e0de-469c-a449-f4846b7033b0_Data.csv')
LE = LE %>%
select(-`Series Name`, -`Series Code`, -`2017 [YR2017]`, -`2018 [YR2018]`) %>%
tidyr::gather(key = 'Year', value = 'Life expectancy',
-`Country Name`, -`Country Code`) %>%
select(-`Country Name`) %>%
mutate(Year = as.integer(substr(Year, 1, 4)),
`Life expectancy` = as.numeric(`Life expectancy`))
# Merge databases
d2 = d1 %>%
left_join(pop, by = c("Country Code" = 'Country Code', 'Year' = 'Year')) %>%
left_join(GDP, by = c("Country Code" = 'Country Code', 'Year' = 'Year')) %>%
left_join(LE, by = c("Country Code" = 'Country Code', 'Year' = 'Year'))
data.table::fwrite(d2, 'Data/f0.csv')
sum(is.na(d2$`Life expectancy`))
f0 = readr::read_csv('Data/f0.csv')
# adjusting legend alpha:
# https://stackoverflow.com/questions/40944239/removing-ggplot2-legend-removes-whole-data-from-the-plot
windowsFonts(Times=windowsFont("Times New Roman"))
f0 %>%
filter(!is.na(`Country Income Group`)) %>%
mutate(`Country Income Group` = ifelse(`Country Income Group` == 'Hi',
'High', `Country Income Group`)) %>%
mutate(`Country Income Group` = factor(`Country Income Group`,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = `Life expectancy`,
group = `Country Code`, color = `Country Income Group`)) +
geom_line(alpha = 0.5, size = 0.4) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)+
theme(legend.justification = c(1, 1), legend.position = c(0.6, 0.1),
legend.background = element_rect(fill=alpha('white', 0.8)),
legend.direction="horizontal", text=element_text(family="Times"))+
guides(color=guide_legend(title="Income group",
override.aes = list(alpha = 1, size = 2)))
f0 %>%
filter(!is.na(`Country Income Group`)) %>%
mutate(`Country Income Group` = ifelse(`Country Income Group` == 'Hi',
'High', `Country Income Group`)) %>%
mutate(`Country Income Group` = factor(`Country Income Group`,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = `Life expectancy`,
group = `Country Code`, color = `Country Income Group`)) +
geom_line(alpha = 0.2, size = 0.4) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)+
theme(legend.justification = c(1, 1), legend.position = c(0.6, 0.1),
legend.background = element_rect(fill=alpha('white', 0.8)),
legend.direction="horizontal", text=element_text(family="Times"))+
guides(color=guide_legend(title="Income group",
override.aes = list(alpha = 1, size = 2)))
f0 %>%
filter(!is.na(`Country Income Group`)) %>%
mutate(`Country Income Group` = ifelse(`Country Income Group` == 'Hi',
'High', `Country Income Group`)) %>%
mutate(`Country Income Group` = factor(`Country Income Group`,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = `Life expectancy`,
group = `Country Code`, color = `Country Income Group`)) +
geom_line(alpha = 0.5, size = 0.2) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)+
theme(legend.justification = c(1, 1), legend.position = c(0.6, 0.1),
legend.background = element_rect(fill=alpha('white', 0.8)),
legend.direction="horizontal", text=element_text(family="Times"))+
guides(color=guide_legend(title="Income group",
override.aes = list(alpha = 1, size = 2)))
f0 %>%
filter(!is.na(`Country Income Group`)) %>%
mutate(`Country Income Group` = ifelse(`Country Income Group` == 'Hi',
'High', `Country Income Group`)) %>%
mutate(`Country Income Group` = factor(`Country Income Group`,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = `Life expectancy`,
group = `Country Code`, color = `Country Income Group`)) +
geom_line(alpha = 0.5, size = 0.1) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)+
theme(legend.justification = c(1, 1), legend.position = c(0.6, 0.1),
legend.background = element_rect(fill=alpha('white', 0.8)),
legend.direction="horizontal", text=element_text(family="Times"))+
guides(color=guide_legend(title="Income group",
override.aes = list(alpha = 1, size = 2)))
f0 %>%
filter(!is.na(`Country Income Group`)) %>%
mutate(`Country Income Group` = ifelse(`Country Income Group` == 'Hi',
'High', `Country Income Group`)) %>%
mutate(`Country Income Group` = factor(`Country Income Group`,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = `Life expectancy`,
group = `Country Code`, color = `Country Income Group`)) +
geom_line(alpha = 0.5, size = 0.1) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)+
theme(legend.justification = c(1, 1), legend.position = c(0.8, 0.1),
legend.background = element_rect(fill=alpha('white', 0.8)),
legend.direction="horizontal", text=element_text(family="Times"))+
guides(color=guide_legend(title="Income group",
override.aes = list(alpha = 1, size = 2)))
f0 %>%
filter(!is.na(`Country Income Group`)) %>%
mutate(`Country Income Group` = ifelse(`Country Income Group` == 'Hi',
'High', `Country Income Group`)) %>%
mutate(`Country Income Group` = factor(`Country Income Group`,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = `Life expectancy`,
group = `Country Code`, color = `Country Income Group`)) +
geom_line(alpha = 0.5, size = 0.1) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)+
theme(legend.justification = c(1, 1), legend.position = c(1, 0.1),
legend.background = element_rect(fill=alpha('white', 0.8)),
legend.direction="horizontal", text=element_text(family="Times"))+
guides(color=guide_legend(title="Income group",
override.aes = list(alpha = 1, size = 2)))
f0 %>%
filter(!is.na(`Country Income Group`)) %>%
mutate(`Country Income Group` = ifelse(`Country Income Group` == 'Hi',
'High', `Country Income Group`)) %>%
mutate(`Country Income Group` = factor(`Country Income Group`,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = `Life expectancy`,
group = `Country Code`, color = `Country Income Group`)) +
geom_line(alpha = 0.5, size = 0.1) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)+
theme(legend.justification = c(1, 1), legend.position = c(0.95, 0.1),
legend.background = element_rect(fill=alpha('white', 0.8)),
legend.direction="horizontal", text=element_text(family="Times"))+
guides(color=guide_legend(title="Income group",
override.aes = list(alpha = 1, size = 2)))
pacman::p_load(tidyverse)
f0 = readr::read_csv('Data/f0.csv')
# adjusting legend alpha:
# https://stackoverflow.com/questions/40944239/removing-ggplot2-legend-removes-whole-data-from-the-plot
windowsFonts(Times=windowsFont("Times New Roman"))
f0 %>%
filter(!is.na(`Country Income Group`)) %>%
mutate(`Country Income Group` = ifelse(`Country Income Group` == 'Hi',
'High', `Country Income Group`)) %>%
mutate(`Country Income Group` = factor(`Country Income Group`,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = `Life expectancy`,
group = `Country Code`, color = `Country Income Group`)) +
geom_line(alpha = 0.5, size = 0.1) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)+
theme(legend.justification = c(1, 1), legend.position = c(0.95, 0.1),
legend.background = element_rect(fill=alpha('white', 0.8)),
legend.direction="horizontal", text=element_text(family="Times"))+
guides(color=guide_legend(title="Income group",
override.aes = list(alpha = 1, size = 2)))
# Country Income Group, Country WHO Region
ggsave('Figures/fig1.pdf', width = 10, height = 6.18)
pacman::p_load(tidyverse)
f0 = readr::read_csv('Data/f0.csv')
# adjusting legend alpha:
# https://stackoverflow.com/questions/40944239/removing-ggplot2-legend-removes-whole-data-from-the-plot
windowsFonts(Times=windowsFont("Times New Roman"))
f0 %>%
filter(!is.na(`Country Income Group`)) %>%
mutate(`Country Income Group` = ifelse(`Country Income Group` == 'Hi',
'High', `Country Income Group`)) %>%
mutate(`Country Income Group` = factor(`Country Income Group`,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = `Life expectancy`,
group = `Country Code`, color = `Country Income Group`)) +
geom_line(alpha = 0.8, size = 0.1) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)+
theme(legend.justification = c(1, 1), legend.position = c(0.95, 0.1),
legend.background = element_rect(fill=alpha('white', 0.8)),
legend.direction="horizontal", text=element_text(family="Times"))+
guides(color=guide_legend(title="Income group",
override.aes = list(alpha = 1, size = 2)))
# Country Income Group, Country WHO Region
ggsave('Figures/fig1.pdf', width = 10, height = 6.18)
pacman::p_load(tidyverse)
f0 = readr::read_csv('Data/f0.csv')
# adjusting legend alpha:
# https://stackoverflow.com/questions/40944239/removing-ggplot2-legend-removes-whole-data-from-the-plot
windowsFonts(Times=windowsFont("Times New Roman"))
f0 %>%
filter(!is.na(`Country Income Group`)) %>%
mutate(`Country Income Group` = ifelse(`Country Income Group` == 'Hi',
'High', `Country Income Group`)) %>%
mutate(`Country Income Group` = factor(`Country Income Group`,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = `Life expectancy`,
group = `Country Code`, color = `Country Income Group`)) +
geom_line(alpha = 1, size = 0.1) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)+
theme(legend.justification = c(1, 1), legend.position = c(0.95, 0.1),
legend.background = element_rect(fill=alpha('white', 0.8)),
legend.direction="horizontal", text=element_text(family="Times"))+
guides(color=guide_legend(title="Income group",
override.aes = list(alpha = 1, size = 2)))
# Country Income Group, Country WHO Region
ggsave('Figures/fig1.pdf', width = 10, height = 6.18)
pacman::p_load(tidyverse)
f0 = readr::read_csv('Data/f0.csv')
# adjusting legend alpha:
# https://stackoverflow.com/questions/40944239/removing-ggplot2-legend-removes-whole-data-from-the-plot
windowsFonts(Times=windowsFont("Times New Roman"))
f0 %>%
filter(!is.na(`Country Income Group`)) %>%
mutate(`Country Income Group` = ifelse(`Country Income Group` == 'Hi',
'High', `Country Income Group`)) %>%
mutate(`Country Income Group` = factor(`Country Income Group`,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = `Life expectancy`,
group = `Country Code`, color = `Country Income Group`)) +
geom_line(alpha = 0.8, size = 0.1) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)+
theme(legend.justification = c(1, 1), legend.position = c(0.95, 0.1),
legend.background = element_rect(fill=alpha('white', 0.8)),
legend.direction="horizontal", text=element_text(family="Times"))+
guides(color=guide_legend(title="Income group",
override.aes = list(alpha = 1, size = 2)))
# Country Income Group, Country WHO Region
ggsave('Figures/fig1.pdf', width = 10, height = 6.18)
pacman::p_load(tidyverse)
f0 = readr::read_csv('Data/f0.csv')
# adjusting legend alpha:
# https://stackoverflow.com/questions/40944239/removing-ggplot2-legend-removes-whole-data-from-the-plot
windowsFonts(Times=windowsFont("Times New Roman"))
f0 %>%
filter(!is.na(`Country Income Group`)) %>%
mutate(`Country Income Group` = ifelse(`Country Income Group` == 'Hi',
'High', `Country Income Group`)) %>%
mutate(`Country Income Group` = factor(`Country Income Group`,
levels = c('Low', 'Low-Mid', 'Up-Mid', 'High'))) %>%
ggplot(aes(x = Year, y = `Life expectancy`,
group = `Country Code`, color = `Country Income Group`)) +
geom_line(alpha = 0.5, size = 0.1) +
theme_bw() + ylab('Life expectancy in each country') +
scale_x_continuous("Year", labels = as.character(2000:2015), breaks = 2000:2015)+
theme(legend.justification = c(1, 1), legend.position = c(0.95, 0.1),
legend.background = element_rect(fill=alpha('white', 0.8)),
legend.direction="horizontal", text=element_text(family="Times"))+
guides(color=guide_legend(title="Income group",
override.aes = list(alpha = 1, size = 2)))
# Country Income Group, Country WHO Region
ggsave('Figures/fig1.pdf', width = 10, height = 6.18)
View(f1)
View(GDP)
fit01 = lm(
Lifeexpectancy ~ CHEGDP_SHA2011 + GGHEDGDP_SHA2011 + PVTDCHE_SHA2011 + OOPSCHE_SHA2011 +
CFACHE_SHA2011 + CHICHE_SHA2011 + Population + GDP + Year + `Country Income Group`,
data = f1)
summary(fit01)
fit_hi = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHEDGDP_SHA2011 + PVTDCHE_SHA2011 +
OOPSCHE_SHA2011 + CFACHE_SHA2011 + CHICHE_SHA2011 + Population + GDP + Year,
data = f1[f1$`Country Income Group` == 'Hi',])
summary(fit_hi)
pacman::p_load(tidyverse, stargazer)
f0 = data.table::fread('Data/f0.csv')
names(f0)=c('CountryName', 'CountryCode', 'WHORegion', 'Country Income Group',
'Year', "CFACHE_SHA2011", "CHEGDP_SHA2011", "CHE_pc_PPP_SHA2011",
"CHE_pc_US_SHA2011", "CHICHE_SHA2011", "DOMCHE_SHA2011", "GFACHE_SHA2011",
"GGHEDCHE_SHA2011", "GGHEDGDP_SHA2011", "GGHEDGGE_SHA2011",
"GGHED_pc_PPP_SHA2011", "GGHED_pc_US_SHA2011", "OOP_pc_PPP_SHA2011",
"OOP_pc_US_SHA2011", "OOPSCHE_SHA2011", "OTHERCHE_SHA2011", "PVTDCHE_SHA2011",
"PVTD_pc_PPP_SHA2011", "PVTD_pc_US_SHA2011", "sha11FS", "sha11FS1",
"sha11FS11", "sha11FS5", "sha11FS6", "sha11FS61", "sha11HF", "sha11HF1",
"sha11HF11", "sha11HF2", "sha11HF21", "sha11HF3", "VFACHE_SHA2011",
"VHICHE_SHA2011", "Population", "GDP", "Lifeexpectancy")
#f1 = f0[f0$CHICHE_SHA2011 != 0&!is.na(f0$CHICHE_SHA2011),]
f1 = f0 %>%
select(CountryName, Lifeexpectancy, CHEGDP_SHA2011, GGHEDGDP_SHA2011, PVTDCHE_SHA2011,
CFACHE_SHA2011, CHICHE_SHA2011, OOPSCHE_SHA2011, Population, GDP, Year, `Country Income Group`) %>%
mutate(Population = Population/1000000,
GDP = GDP/1000) %>%
na.omit() %>%
data.table::data.table()
data.table::fwrite(f1, 'Data/f1.csv')
fit01 = lm(
Lifeexpectancy ~ CHEGDP_SHA2011 + GGHEDGDP_SHA2011 + PVTDCHE_SHA2011 + OOPSCHE_SHA2011 +
CFACHE_SHA2011 + CHICHE_SHA2011 + Population + GDP + Year + `Country Income Group`,
data = f1)
fit_hi = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHEDGDP_SHA2011 + PVTDCHE_SHA2011 +
OOPSCHE_SHA2011 + CFACHE_SHA2011 + CHICHE_SHA2011 + Population + GDP + Year,
data = f1[f1$`Country Income Group` == 'Hi',])
fit_upmid = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHEDGDP_SHA2011 + PVTDCHE_SHA2011 +
OOPSCHE_SHA2011 + CFACHE_SHA2011 + CHICHE_SHA2011 + Population + GDP + Year,
data = f1[f1$`Country Income Group` == 'Up-Mid',])
fit_lowmid = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHEDGDP_SHA2011 + PVTDCHE_SHA2011 +
OOPSCHE_SHA2011 + CFACHE_SHA2011 + CHICHE_SHA2011 + Population + GDP + Year,
data = f1[f1$`Country Income Group` == 'Low-Mid',])
fit_low = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHEDGDP_SHA2011 + PVTDCHE_SHA2011 +
OOPSCHE_SHA2011 + CFACHE_SHA2011 + CHICHE_SHA2011 + Population + GDP + Year,
data = f1[f1$`Country Income Group` == 'Low',])
summary(fit01)
summary(alias(fit01))
alias(fit01)
f1[,cor(GDP, Population)]
View(GDP)
GDP = data.table::fread('Data/Data_Extract_From_World_Development_Indicators_GDP/28edd75e-f579-4950-86eb-7846b8864683_Data.csv')
GDP = GDP %>%
select(-`Series Name`, -`Series Code`, -`2017 [YR2017]`, -`2018 [YR2018]`) %>%
tidyr::gather(key = 'Year', value = 'GDP', -`Country Name`, -`Country Code`) %>%
select(-`Country Name`) %>%
mutate(Year = as.integer(substr(Year, 1, 4)),
GDP = as.numeric(GDP))
d2 = d1 %>%
left_join(pop, by = c("Country Code" = 'Country Code', 'Year' = 'Year')) %>%
left_join(GDP, by = c("Country Code" = 'Country Code', 'Year' = 'Year')) %>%
left_join(LE, by = c("Country Code" = 'Country Code', 'Year' = 'Year'))
sum(is.na(d2$Population))
sum(is.na(d2$GDP))
sum(is.na(d2$`Life expectancy`))
data.table::fwrite(d2, 'Data/f0.csv')
pacman::p_load(tidyverse, stargazer)
f0 = data.table::fread('Data/f0.csv')
names(f0)=c('CountryName', 'CountryCode', 'WHORegion', 'Country Income Group',
'Year', "CFACHE_SHA2011", "CHEGDP_SHA2011", "CHE_pc_PPP_SHA2011",
"CHE_pc_US_SHA2011", "CHICHE_SHA2011", "DOMCHE_SHA2011", "GFACHE_SHA2011",
"GGHEDCHE_SHA2011", "GGHEDGDP_SHA2011", "GGHEDGGE_SHA2011",
"GGHED_pc_PPP_SHA2011", "GGHED_pc_US_SHA2011", "OOP_pc_PPP_SHA2011",
"OOP_pc_US_SHA2011", "OOPSCHE_SHA2011", "OTHERCHE_SHA2011", "PVTDCHE_SHA2011",
"PVTD_pc_PPP_SHA2011", "PVTD_pc_US_SHA2011", "sha11FS", "sha11FS1",
"sha11FS11", "sha11FS5", "sha11FS6", "sha11FS61", "sha11HF", "sha11HF1",
"sha11HF11", "sha11HF2", "sha11HF21", "sha11HF3", "VFACHE_SHA2011",
"VHICHE_SHA2011", "Population", "GDP", "Lifeexpectancy")
#f1 = f0[f0$CHICHE_SHA2011 != 0&!is.na(f0$CHICHE_SHA2011),]
f1 = f0 %>%
select(CountryName, Lifeexpectancy, CHEGDP_SHA2011, GGHEDGDP_SHA2011, PVTDCHE_SHA2011,
CFACHE_SHA2011, CHICHE_SHA2011, OOPSCHE_SHA2011, Population, GDP, Year, `Country Income Group`) %>%
mutate(Population = Population/1000000,
GDP = GDP/1000) %>%
na.omit() %>%
data.table::data.table()
View(f1)
View(f1)
f0$GDP[f0$CountryName == 'China',]
f0$GDP[f0$CountryName == 'China']
2237080553585/1000000000
f1 = f0 %>%
select(CountryName, Lifeexpectancy, CHEGDP_SHA2011, GGHEDGDP_SHA2011, PVTDCHE_SHA2011,
CFACHE_SHA2011, CHICHE_SHA2011, OOPSCHE_SHA2011, Population, GDP, Year, `Country Income Group`)
View(f1)
f1 = f0 %>%
select(CountryName, Lifeexpectancy, CHEGDP_SHA2011, GGHEDGDP_SHA2011, PVTDCHE_SHA2011,
CFACHE_SHA2011, CHICHE_SHA2011, OOPSCHE_SHA2011, Population, GDP, Year, `Country Income Group`) %>%
mutate(Population = Population/1000000,
GDP = GDP/1000000000)
count(f1, CountryName)
f1 = f0 %>%
select(CountryName, Lifeexpectancy, CHEGDP_SHA2011, GGHEDGDP_SHA2011, PVTDCHE_SHA2011,
CFACHE_SHA2011, CHICHE_SHA2011, OOPSCHE_SHA2011, Population, GDP, Year, `Country Income Group`) %>%
mutate(Population = Population/1000000,
GDP = GDP/10000000000) %>%
na.omit() %>%
data.table::data.table()
count(f1, CountryName)
count(f1, CountryName) %>% arrange(n)
knitr::opts_chunk$set(echo = FALSE, eval=FALSE, cache = FALSE, fig.pos = 'H')
pacman::p_load(tidyverse, stargazer)
f0 = data.table::fread('Data/f0.csv')
names(f0)=c('CountryName', 'CountryCode', 'WHORegion', 'Country Income Group',
'Year', "CFACHE_SHA2011", "CHEGDP_SHA2011", "CHE_pc_PPP_SHA2011",
"CHE_pc_US_SHA2011", "CHICHE_SHA2011", "DOMCHE_SHA2011", "GFACHE_SHA2011",
"GGHEDCHE_SHA2011", "GGHEDGDP_SHA2011", "GGHEDGGE_SHA2011",
"GGHED_pc_PPP_SHA2011", "GGHED_pc_US_SHA2011", "OOP_pc_PPP_SHA2011",
"OOP_pc_US_SHA2011", "OOPSCHE_SHA2011", "OTHERCHE_SHA2011", "PVTDCHE_SHA2011",
"PVTD_pc_PPP_SHA2011", "PVTD_pc_US_SHA2011", "sha11FS", "sha11FS1",
"sha11FS11", "sha11FS5", "sha11FS6", "sha11FS61", "sha11HF", "sha11HF1",
"sha11HF11", "sha11HF2", "sha11HF21", "sha11HF3", "VFACHE_SHA2011",
"VHICHE_SHA2011", "Population", "GDP", "Lifeexpectancy")
#f1 = f0[f0$CHICHE_SHA2011 != 0&!is.na(f0$CHICHE_SHA2011),]
f1 = f0 %>%
select(CountryName, Lifeexpectancy, CHEGDP_SHA2011, GGHEDGDP_SHA2011, PVTDCHE_SHA2011,
CFACHE_SHA2011, CHICHE_SHA2011, OOPSCHE_SHA2011, Population, GDP, Year, `Country Income Group`) %>%
mutate(Population = Population/1000000,
GDP = GDP/10000000000) %>%
na.omit() %>%
data.table::data.table()
data.table::fwrite(f1, 'Data/f1.csv')
fit01 = lm(
Lifeexpectancy ~ CHEGDP_SHA2011 + GGHEDGDP_SHA2011 + PVTDCHE_SHA2011 + OOPSCHE_SHA2011 +
CFACHE_SHA2011 + CHICHE_SHA2011 + Population + GDP + Year + `Country Income Group`,
data = f1)
fit_hi = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHEDGDP_SHA2011 + PVTDCHE_SHA2011 +
OOPSCHE_SHA2011 + CFACHE_SHA2011 + CHICHE_SHA2011 + Population + GDP + Year,
data = f1[f1$`Country Income Group` == 'Hi',])
fit_upmid = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHEDGDP_SHA2011 + PVTDCHE_SHA2011 +
OOPSCHE_SHA2011 + CFACHE_SHA2011 + CHICHE_SHA2011 + Population + GDP + Year,
data = f1[f1$`Country Income Group` == 'Up-Mid',])
fit_lowmid = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHEDGDP_SHA2011 + PVTDCHE_SHA2011 +
OOPSCHE_SHA2011 + CFACHE_SHA2011 + CHICHE_SHA2011 + Population + GDP + Year,
data = f1[f1$`Country Income Group` == 'Low-Mid',])
fit_low = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHEDGDP_SHA2011 + PVTDCHE_SHA2011 +
OOPSCHE_SHA2011 + CFACHE_SHA2011 + CHICHE_SHA2011 + Population + GDP + Year,
data = f1[f1$`Country Income Group` == 'Low',])
2975/3269
2975-3269
count(f1, CountryName)
pacman::p_load(tidyverse, tidyr)
#d1 = rio::import('Data/AllData.xlsx')
#data.table::fwrite(d1, 'Data/alldat.csv')
d0 = data.table::fread('Data/alldat.csv')
codebook = d0[!duplicated(d0$`Indicator Code`),5:7]
#data.table::fwrite(codebook, 'Data/codebook.csv')
d1 = d0 %>%
select(`Country Name`, `Country Code`, `Country WHO Region`, `Country Income Group`,
`Indicator Code`, Year, Value) %>%
spread(`Indicator Code`, Value) %>%
select(c(1:ncol(.))[colSums(is.na(.)) < 500])
var_sel = names(d1)
codebook1 = codebook[codebook$`Indicator Code` %in% names(d1),]
#data.table::fwrite(codebook1, 'Data/codebook1.csv')
pop = data.table::fread('Data/Data_Extract_From_World_Development_Indicators_Population/7f9c04b7-9a7d-435b-878b-6c907d23db48_Data.csv')
pop = pop %>%
select(-`Series Name`, -`Series Code`, -`2017 [YR2017]`, -`2018 [YR2018]`) %>%
tidyr::gather(key = 'Year', value = 'Population', -`Country Name`, -`Country Code`) %>%
select(-`Country Name`) %>%
mutate(Year = as.integer(substr(Year, 1, 4)),
Population = as.numeric(Population))
# GDP, downloaded at:
# https://databank.worldbank.org/data/reports.aspx?source=2&series=NY.GDP.MKTP.KD&country=#
GDP = data.table::fread('Data/Data_Extract_From_World_Development_Indicators_GDP/28edd75e-f579-4950-86eb-7846b8864683_Data.csv')
GDP = GDP %>%
select(-`Series Name`, -`Series Code`, -`2017 [YR2017]`, -`2018 [YR2018]`) %>%
tidyr::gather(key = 'Year', value = 'GDP', -`Country Name`, -`Country Code`) %>%
select(-`Country Name`) %>%
mutate(Year = as.integer(substr(Year, 1, 4)),
GDP = as.numeric(GDP))
# Life expectancy
# https://databank.worldbank.org/data/reports.aspx?source=2&series=SP.DYN.LE00.IN&country=
LE = data.table::fread('Data/Data_Extract_From_World_Development_Indicators_Life_expectancy/48b94b19-e0de-469c-a449-f4846b7033b0_Data.csv')
LE = LE %>%
select(-`Series Name`, -`Series Code`, -`2017 [YR2017]`, -`2018 [YR2018]`) %>%
tidyr::gather(key = 'Year', value = 'Life expectancy',
-`Country Name`, -`Country Code`) %>%
select(-`Country Name`) %>%
mutate(Year = as.integer(substr(Year, 1, 4)),
`Life expectancy` = as.numeric(`Life expectancy`))
# Merge databases
d2 = d1 %>%
left_join(pop, by = c("Country Code" = 'Country Code', 'Year' = 'Year')) %>%
left_join(GDP, by = c("Country Code" = 'Country Code', 'Year' = 'Year')) %>%
left_join(LE, by = c("Country Code" = 'Country Code', 'Year' = 'Year'))
names(d2) = names(d2) %>%
gsub("%", "", .) %>%
gsub("\\$", "", .) %>%
gsub(" ", "", .) %>%
gsub("-", "_", .) %>%
gsub("\\.", "", .)
View(d2)
names(d2)
f1 = d2 %>%
select(CountryWHORegion, CountryName, Lifeexpectancy, CHEGDP_SHA2011, GGHE_DGDP_SHA2011,
PVT_DCHE_SHA2011, OOPSCHE_SHA2011, CFACHE_SHA2011, CHICHE_SHA2011,
Population, GDP, Year, CountryIncomeGroup) %>%
mutate(Population = Population/1000000,
GDP = GDP/10000000000) %>%
na.omit() %>%
data.table::data.table()
count(f1,CountryWHORegion )
f1 %>% distinct(CountryName) %>% count(CountryWHORegion)
names(f1)
f1 %>% distinct(CountryName)
f1 %>% distinct(CountryName, .keep_all = TRUE) %>% count(CountryWHORegion)
