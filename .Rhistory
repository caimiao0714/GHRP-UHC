pacman::p_load(tidyverse, stargazer)
fit01 = lm(
Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +  PVT_DCHE_SHA2011 +
OOPSCHE_SHA2011 + CFACHE_SHA2011 + CHICHE_SHA2011 +
Population + GDP + Year + CountryIncomeGroup,
data = f1)
fit_hi = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +
PVT_DCHE_SHA2011 +  OOPSCHE_SHA2011 + CFACHE_SHA2011 +
CHICHE_SHA2011 +  Population + GDP + Year,
data = f1[f1$CountryIncomeGroup == 'Hi',])
fit_upmid = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +
PVT_DCHE_SHA2011 +  OOPSCHE_SHA2011 + CFACHE_SHA2011 +
CHICHE_SHA2011 +  Population + GDP + Year,
data = f1[f1$CountryIncomeGroup == 'Up-Mid',])
fit_lowmid = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +
PVT_DCHE_SHA2011 +  OOPSCHE_SHA2011 + CFACHE_SHA2011 +
CHICHE_SHA2011 +  Population + GDP + Year,
data = f1[f1$CountryIncomeGroup == 'Low-Mid',])
fit_low = lm(Lifeexpectancy ~ CHEGDP_SHA2011 + GGHE_DGDP_SHA2011 +
PVT_DCHE_SHA2011 +  OOPSCHE_SHA2011 + CFACHE_SHA2011 +
CHICHE_SHA2011 +  Population + GDP + Year,
data = f1[f1$CountryIncomeGroup == 'Low',])
stargazer(fit01)
stargazer(tab1, summary = FALSE)
stargazer::stargazer(tab1, summary = FALSE, label = 'descriptive',
title="Characteristics of the countries by income group, 2000 - 2015",
single.row=FALSE, header=FALSE, font.size='small',align = 'l')
tab1
f1 = data.table::fread('Data/f1.csv')
require(tableone)
require(tidyverse)
vars <- c("Lifeexpectancy", "CHEGDP_SHA2011", "GGHE_DGDP_SHA2011", "PVT_DCHE_SHA2011",
"OOPSCHE_SHA2011", "CFACHE_SHA2011",  "CHICHE_SHA2011", "Population", "GDP" )
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1)
, printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
rownames(tab1) <- c(
'N',
'Life Expectancy',
'Current health expenditure as percent of GDP',
'Government Health Expenditure as percent of GDP',
'Private health expenditure as percent CHE',
'Out-of-pocket payment as percent of CHE',
'Compulsory financing arrangements as percent of CHE',
'Compulsory health insurance as percent of CHE',
'Population (millions)',
'GDP'
)
tab1 = data.table::data.table(tab1)
setDT(tab1, keep.rownames = TRUE)[]
names(tab1) <- c("Low", "Low-Mid", "Up-Mid", "High")
f1 = data.table::fread('Data/f1.csv')
require(tableone)
require(tidyverse)
vars <- c("Lifeexpectancy", "CHEGDP_SHA2011", "GGHE_DGDP_SHA2011", "PVT_DCHE_SHA2011",
"OOPSCHE_SHA2011", "CFACHE_SHA2011",  "CHICHE_SHA2011", "Population", "GDP" )
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1)
, printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
rownames(tab1) <- c(
'N',
'Life Expectancy',
'Current health expenditure as percent of GDP',
'Government Health Expenditure as percent of GDP',
'Private health expenditure as percent CHE',
'Out-of-pocket payment as percent of CHE',
'Compulsory financing arrangements as percent of CHE',
'Compulsory health insurance as percent of CHE',
'Population (millions)',
'GDP'
)
tab1 = data.table::data.table(tab1)
data.table::setDT(tab1, keep.rownames = TRUE)[]
names(tab1) <- c("Low", "Low-Mid", "Up-Mid", "High")
tab1 = data.table::setDT(tab1, keep.rownames = TRUE)[]
tab1
f1 = data.table::fread('Data/f1.csv')
require(tableone)
require(tidyverse)
vars <- c("Lifeexpectancy", "CHEGDP_SHA2011", "GGHE_DGDP_SHA2011", "PVT_DCHE_SHA2011",
"OOPSCHE_SHA2011", "CFACHE_SHA2011",  "CHICHE_SHA2011", "Population", "GDP" )
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1)
, printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
tab1 = data.table::data.table(tab1)
rownames(tab1) <- c(
'N',
'Life Expectancy',
'Current health expenditure as percent of GDP',
'Government Health Expenditure as percent of GDP',
'Private health expenditure as percent CHE',
'Out-of-pocket payment as percent of CHE',
'Compulsory financing arrangements as percent of CHE',
'Compulsory health insurance as percent of CHE',
'Population (millions)',
'GDP'
)
tab1 = data.table::setDT(tab1, keep.rownames = TRUE)[]
names(tab1) <- c("Low", "Low-Mid", "Up-Mid", "High")
tab1
View(tab1)
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1)
, printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1)
, printToggle = FALSE) %>%
as.data.frame()
tab1
, printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
add_column(varnames = varnames, before = 1)
varnames <- c(
'N',
'Life Expectancy',
'Current health expenditure as percent of GDP',
'Government Health Expenditure as percent of GDP',
'Private health expenditure as percent CHE',
'Out-of-pocket payment as percent of CHE',
'Compulsory financing arrangements as percent of CHE',
'Compulsory health insurance as percent of CHE',
'Population (millions)',
'GDP'
)
, printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
add_column(varnames = varnames, before = 1)
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
add_column(varnames = varnames, before = 1)
tab1
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
tab1
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column()
tab1
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames)
tab1
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames) %>%
set_colnames(c("Variables", "Low", "Low-Mid", "Up-Mid", "High"))
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames) %>%
setNames(c("Variables", "Low", "Low-Mid", "Up-Mid", "High"))
tab1
print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames)
View(tab1)
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames) %>%
remove_rownames() %>%
setNames(c("Variables", "Low", "Low-Mid", "Up-Mid", "High"))
tab1
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames) %>%
remove_rownames() %>%
setNames(c("Variables", "Low", "Low-Mid", "Up-Mid", "High"))
stargazer::stargazer(tab1, summary = FALSE, label = 'descriptive',
title="Characteristics of the countries by income group, 2000 - 2015",
single.row=FALSE, header=FALSE, font.size='small',align = TRUE)
tab1
print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames)
print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames) %>%
remove_rownames()
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1)) %>%
rownames_to_column() %>%
mutate(rowname = varnames) %>%
remove_rownames()
row.names(tab1) = NULL
tab1
stargazer(fit_low, fit_lowmid, fit_upmid, fit_hi, label = 'stratifiedOLS',
dep.var.labels=c("Life expectancy"),
title="OLS model predicting life expectancies from 2000 to 2015 stratifeid by country income categories", align=TRUE,
covariate.labels=c(
"Current Health Expenditure as percent of GDP",
"Government Health Expenditure as percent of GDP",
"Private Health Expenditure as percent CHE",
"Out-of-pocket payment as percent of CHE",
"Compulsory Financing Arrangements as percent of CHE",
"Compulsory health insurance as percent of CHE",
"Population (millions)", "GDP","Year", "Constant"),
column.labels=c("Low","Low-mid", "Up-mid", "High"),
omit.stat=c("LL","ser","f"), ci=TRUE, single.row=FALSE,
header=FALSE, font.size='small')
f1 = data.table::fread('Data/f1.csv')
pacman::p_load(tidyverse)
count(f1, CountryName)
count(f1, CountryName) %>% arrange(n)
count(f1, CountryName) %>% arrange(n) %>% print(n = 50)
184-18
166/184
View(f1)
pacman::p_load(tidyverse, tidyr)
#d1 = rio::import('Data/AllData.xlsx')
#data.table::fwrite(d1, 'Data/alldat.csv')
d0 = data.table::fread('Data/alldat.csv')
codebook = d0[!duplicated(d0$`Indicator Code`),5:7]
#data.table::fwrite(codebook, 'Data/codebook.csv')
d1 = d0 %>%
select(`Country Name`, `Country Code`, `Country WHO Region`, `Country Income Group`,
`Indicator Code`, Year, Value) %>%
spread(`Indicator Code`, Value) %>%
select(c(1:ncol(.))[colSums(is.na(.)) < 500])
var_sel = names(d1)
codebook1 = codebook[codebook$`Indicator Code` %in% names(d1),]
#data.table::fwrite(codebook1, 'Data/codebook1.csv')
# Population, downloaded at:
# https://databank.worldbank.org/data/reports.aspx?source=2&series=SP.POP.TOTL&country=#
pop = data.table::fread('Data/Data_Extract_From_World_Development_Indicators_Population/7f9c04b7-9a7d-435b-878b-6c907d23db48_Data.csv')
pop = pop %>%
select(-`Series Name`, -`Series Code`, -`2017 [YR2017]`, -`2018 [YR2018]`) %>%
tidyr::gather(key = 'Year', value = 'Population', -`Country Name`, -`Country Code`) %>%
select(-`Country Name`) %>%
mutate(Year = as.integer(substr(Year, 1, 4)),
Population = as.numeric(Population))
# GDP, downloaded at:
# https://databank.worldbank.org/data/reports.aspx?source=2&series=NY.GDP.MKTP.KD&country=#
GDP = data.table::fread('Data/Data_Extract_From_World_Development_Indicators_GDP/28edd75e-f579-4950-86eb-7846b8864683_Data.csv')
GDP = GDP %>%
select(-`Series Name`, -`Series Code`, -`2017 [YR2017]`, -`2018 [YR2018]`) %>%
tidyr::gather(key = 'Year', value = 'GDP', -`Country Name`, -`Country Code`) %>%
select(-`Country Name`) %>%
mutate(Year = as.integer(substr(Year, 1, 4)),
GDP = as.numeric(GDP))
# Life expectancy
# https://databank.worldbank.org/data/reports.aspx?source=2&series=SP.DYN.LE00.IN&country=
LE = data.table::fread('Data/Data_Extract_From_World_Development_Indicators_Life_expectancy/48b94b19-e0de-469c-a449-f4846b7033b0_Data.csv')
LE = LE %>%
select(-`Series Name`, -`Series Code`, -`2017 [YR2017]`, -`2018 [YR2018]`) %>%
tidyr::gather(key = 'Year', value = 'Life expectancy',
-`Country Name`, -`Country Code`) %>%
select(-`Country Name`) %>%
mutate(Year = as.integer(substr(Year, 1, 4)),
`Life expectancy` = as.numeric(`Life expectancy`))
# Merge databases
d2 = d1 %>%
left_join(pop, by = c("Country Code" = 'Country Code', 'Year' = 'Year')) %>%
left_join(GDP, by = c("Country Code" = 'Country Code', 'Year' = 'Year')) %>%
left_join(LE, by = c("Country Code" = 'Country Code', 'Year' = 'Year'))
names(d2) = names(d2) %>%
gsub("%", "", .) %>%
gsub("\\$", "", .) %>%
gsub(" ", "", .) %>%
gsub("-", "_", .) %>%
gsub("\\.", "", .)
f1 = d2 %>%
select(CountryName, Lifeexpectancy, CHEGDP_SHA2011, GGHE_DGDP_SHA2011,
PVT_DCHE_SHA2011, OOPSCHE_SHA2011, CFACHE_SHA2011, CHICHE_SHA2011,
Population, GDP, Year, CountryIncomeGroup) %>%
mutate(Population = Population/1000000,
GDP = GDP/10000000000) %>%
na.omit() %>%
data.table::data.table()
View(f1)
data.table::fwrite(f1, 'Data/f1.csv')
knitr::opts_chunk$set(echo = FALSE, eval=FALSE, cache = TRUE, fig.pos = 'H')
f1 = data.table::fread('Data/f1.csv')
require(tableone)
require(tableone)
require(tidyverse)
require(tableone)
require(tidyverse)
vars <- c("Lifeexpectancy", "CHEGDP_SHA2011", "GGHE_DGDP_SHA2011", "PVT_DCHE_SHA2011",
"OOPSCHE_SHA2011", "CFACHE_SHA2011",  "CHICHE_SHA2011", "Population", "GDP" )
tab1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
tmp1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
tmp2 <-  print(CreateContTable(vars, data = f1),
printToggle = FALSE) %>%
as.data.frame()
View(tmp2)
tab1 <- cbind(tmp1, tmp2)
View(tab1)
row.names(tab1) = c(
'No of observations',
'Life expectancy',
'Current health expenditure as percent of GDP',
'Government Health Expenditure as percent of GDP',
'Private health expenditure as percent CHE',
'Out-of-pocket payment as percent of CHE',
'Compulsory financing arrangements as percent of CHE',
'Compulsory health insurance as percent of CHE',
'Population (millions)',
'GDP'
)
names(tab1) = c("Low", "Low-Mid", "Up-Mid", "High")
View(tab1)
names(tab1) = c("Low", "Low-Mid", "Up-Mid", "High", "Overall")
View(tab1)
f1 = data.table::fread('Data/f1.csv')
require(tableone)
require(tidyverse)
vars <- c("Lifeexpectancy", "CHEGDP_SHA2011", "GGHE_DGDP_SHA2011", "PVT_DCHE_SHA2011",
"OOPSCHE_SHA2011", "CFACHE_SHA2011",  "CHICHE_SHA2011", "Population", "GDP" )
tmp1 <- print(CreateContTable(vars, strata = "CountryIncomeGroup", data = f1),
printToggle = FALSE) %>%
as.data.frame() %>% select(c(2:4, 1))
tmp2 <-  print(CreateContTable(vars, data = f1),
printToggle = FALSE) %>%
as.data.frame()
tab1 <- cbind(tmp1, tmp2)
row.names(tab1) = c(
'No of observations',
'Life expectancy',
'Current health expenditure as percent of GDP',
'Government Health Expenditure as percent of GDP',
'Private health expenditure as percent CHE',
'Out-of-pocket payment as percent of CHE',
'Compulsory financing arrangements as percent of CHE',
'Compulsory health insurance as percent of CHE',
'Population (millions)',
'GDP'
)
names(tab1) = c("Low", "Low-Mid", "Up-Mid", "High", "Overall")
View(tab1)
require(kableExtra)
kable(tab1, caption = "Characteristics of the 184 countries by income group, 2000 - 2016",
format = "latex", booktabs = T) %>%
kable_styling(latex_options = "scale_down") %>%
footnote(general = "GDP: Gross Domestic Product; CHE: Current Health Expenditure", general_title = "", footnote_as_chunk = T)
View(tab1)
kable(tab1, caption = "Characteristics of the 184 countries by income group, 2000 - 2016",
format = "latex", booktabs = T) %>%
kable_styling(latex_options = c("scale_down","HOLD_position")) %>%
footnote(general = "Means and standard deviations (in parentheses) are reported.",
general = "GDP: Gross Domestic Product; CHE: Current Health Expenditure", general_title = "", footnote_as_chunk = T)
devtools::install_github("NikNakk/forestmodel")
devtools::install_github("NikNakk/forestmodel")
library("forestmodel")
devtools::install_github("NikNakk/forestmodel")
install.packages("forestmodel")
library("forestmodel")
library("survival")
library("broom")
library("ggplot2")
library("dplyr")
forest_cox <- function(cox, widths = c(0.10, 0.07, 0.05, 0.04, 0.54, 0.03, 0.17),
colour = "black", shape = 15, banded = TRUE) {
data <- model.frame(cox)
forest_terms <- data.frame(variable = names(attr(cox$terms, "dataClasses"))[-1],
term_label = attr(cox$terms, "term.labels"),
class = attr(cox$terms, "dataClasses")[-1], stringsAsFactors = FALSE,
row.names = NULL) %>%
group_by(term_no = row_number()) %>% do({
if (.$class == "factor") {
tab <- table(eval(parse(text = .$term_label), data, parent.frame()))
data.frame(.,
level = names(tab),
level_no = 1:length(tab),
n = as.integer(tab),
stringsAsFactors = FALSE, row.names = NULL)
} else {
data.frame(., n = sum(!is.na(eval(parse(text = .$term_label), data, parent.frame()))),
stringsAsFactors = FALSE)
}
}) %>%
ungroup %>%
mutate(term = paste0(term_label, replace(level, is.na(level), "")),
y = n():1) %>%
left_join(tidy(cox), by = "term")
rel_x <- cumsum(c(0, widths / sum(widths)))
panes_x <- numeric(length(rel_x))
forest_panes <- 5:6
before_after_forest <- c(forest_panes[1] - 1, length(panes_x) - forest_panes[2])
panes_x[forest_panes] <- with(forest_terms, c(min(conf.low, na.rm = TRUE), max(conf.high, na.rm = TRUE)))
panes_x[-forest_panes] <-
panes_x[rep(forest_panes, before_after_forest)] +
diff(panes_x[forest_panes]) / diff(rel_x[forest_panes]) *
(rel_x[-(forest_panes)] - rel_x[rep(forest_panes, before_after_forest)])
forest_terms <- forest_terms %>%
mutate(variable_x = panes_x[1],
level_x = panes_x[2],
n_x = panes_x[3],
conf_int = ifelse(is.na(level_no) | level_no > 1,
sprintf("%0.2f (%0.2f-%0.2f)", exp(estimate), exp(conf.low), exp(conf.high)),
"Reference"),
p = ifelse(is.na(level_no) | level_no > 1,
sprintf("%0.3f", p.value),
""),
estimate = ifelse(is.na(level_no) | level_no > 1, estimate, 0),
conf_int_x = panes_x[forest_panes[2] + 1],
p_x = panes_x[forest_panes[2] + 2]
)
forest_lines <- data.frame(x = c(rep(c(0, mean(panes_x[forest_panes + 1]), mean(panes_x[forest_panes - 1])), each = 2),
panes_x[1], panes_x[length(panes_x)]),
y = c(rep(c(0.5, max(forest_terms$y) + 1.5), 3),
rep(max(forest_terms$y) + 0.5, 2)),
linetype = rep(c("dashed", "solid"), c(2, 6)),
group = rep(1:4, each = 2))
forest_headings <- data.frame(term = factor("Variable", levels = levels(forest_terms$term)),
x = c(panes_x[1],
panes_x[3],
mean(panes_x[forest_panes]),
panes_x[forest_panes[2] + 1],
panes_x[forest_panes[2] + 2]),
y = nrow(forest_terms) + 1,
label = c("Variable", "N", "Hazard Ratio", "", "p"),
hjust = c(0, 0, 0.5, 0, 1)
)
forest_rectangles <- data.frame(xmin = panes_x[1],
xmax = panes_x[forest_panes[2] + 2],
y = seq(max(forest_terms$y), 1, -2)) %>%
mutate(ymin = y - 0.5, ymax = y + 0.5)
forest_theme <- function() {
theme_minimal() +
theme(axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_blank(),
strip.text = element_blank(),
panel.margin = unit(rep(2, 4), "mm")
)
}
forest_range <- exp(panes_x[forest_panes])
forest_breaks <- c(
if (forest_range[1] < 0.1) seq(max(0.02, ceiling(forest_range[1] / 0.02) * 0.02), 0.1, 0.02),
if (forest_range[1] < 0.8) seq(max(0.2, ceiling(forest_range[1] / 0.2) * 0.2), 0.8, 0.2),
1,
if (forest_range[2] > 2) seq(2, min(10, floor(forest_range[2] / 2) * 2), 2),
if (forest_range[2] > 20) seq(20, min(100, floor(forest_range[2] / 20) * 20), 20)
)
main_plot <- ggplot(forest_terms, aes(y = y))
if (banded) {
main_plot <- main_plot +
geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
forest_rectangles, fill = "#EFEFEF")
}
main_plot <- main_plot +
geom_point(aes(estimate, y), size = 5, shape = shape, colour = colour) +
geom_errorbarh(aes(estimate,
xmin = conf.low,
xmax = conf.high,
y = y),
height = 0.15, colour = colour) +
geom_line(aes(x = x, y = y, linetype = linetype, group = group),
forest_lines) +
scale_linetype_identity() +
scale_alpha_identity() +
scale_x_continuous(breaks = log(forest_breaks),
labels = sprintf("%g", forest_breaks),
expand = c(0, 0)) +
geom_text(aes(x = x, label = label, hjust = hjust),
forest_headings,
fontface = "bold") +
geom_text(aes(x = variable_x, label = variable),
subset(forest_terms, is.na(level_no) | level_no == 1),
fontface = "bold",
hjust = 0) +
geom_text(aes(x = level_x, label = level), hjust = 0, na.rm = TRUE) +
geom_text(aes(x = n_x, label = n), hjust = 0) +
geom_text(aes(x = conf_int_x, label = conf_int), hjust = 0) +
geom_text(aes(x = p_x, label = p), hjust = 1) +
forest_theme()
main_plot
}
forest_cox()
pretty_lung <- lung %>%
transmute(time,
status,
Age = age,
Sex = factor(sex, labels = c("Male", "Female")),
ECOG = factor(lung$ph.ecog),
`Meal Cal` = meal.cal)
lung_cox <- coxph(Surv(time, status) ~ ., pretty_lung)
print(forest_cox(lung_cox))
pacman::p_load(tidyverse)
who %>%
gather(new_sp_m014:newrel_f65, key = "key", value = "cases", na.rm = TRUE) %>%
mutate(key = stringr::str_replace(key, "newrel", "new_rel")) %>%
separate(key, c("new", "type", "sexage")) %>%
separate(sexage, c("sex", "age"), sep = 1) %>%
select(-iso2, -iso3, -new, -type, -age)
f1 = data.table::fread('Data/f1.csv')
View(f1)
